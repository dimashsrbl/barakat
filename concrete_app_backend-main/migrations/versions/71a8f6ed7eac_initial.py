"""initial

Revision ID: 71a8f6ed7eac
Revises: 
Create Date: 2024-02-06 18:06:02.826901

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '71a8f6ed7eac'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('concrete', 'mortar', 'claydite_concrete', 'sand_concrete', 'high_quality_concrete', 'reinforced_concrete', 'other', name='materialtypeenum').create(op.get_bind())
    sa.Enum('horizontal', 'vertical', name='constructiontypeenum').create(op.get_bind())
    sa.Enum('supplier', 'customer', 'all', name='companyfuncenum').create(op.get_bind())
    sa.Enum('TOO', 'IP', 'PP', name='companytypeenum').create(op.get_bind())
    op.create_table('Carrier',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('Company',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('company_type', postgresql.ENUM('TOO', 'IP', 'PP', name='companytypeenum', create_type=False), nullable=False),
    sa.Column('company_func', postgresql.ENUM('supplier', 'customer', 'all', name='companyfuncenum', create_type=False), nullable=False),
    sa.Column('contact_number', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('ConcreteMixingPlant',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('token', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('Construction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('construction_type', postgresql.ENUM('horizontal', 'vertical', name='constructiontypeenum', create_type=False), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('Material',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('material_type', postgresql.ENUM('concrete', 'mortar', 'claydite_concrete', 'sand_concrete', 'high_quality_concrete', 'reinforced_concrete', 'other', name='materialtypeenum', create_type=False), nullable=False),
    sa.Column('density', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('Permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ReceiveMethod',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('Role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('Object',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('contact_number', sa.String(), nullable=True),
    sa.Column('chat_id', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['Company.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('RolePermission',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['Permission.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['Role.id'], ),
    sa.PrimaryKeyConstraint('role_id', 'permission_id')
    )
    op.create_table('Transport',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('plate_number', sa.String(), nullable=False),
    sa.Column('driver_fullname', sa.String(), nullable=False),
    sa.Column('admissible_error', sa.Integer(), nullable=True),
    sa.Column('tare', sa.Integer(), nullable=True),
    sa.Column('carrier_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['carrier_id'], ['Carrier.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('plate_number')
    )
    op.create_table('User',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('login', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('fullname', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['Role.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_User_id'), 'User', ['id'], unique=False)
    op.create_index(op.f('ix_User_login'), 'User', ['login'], unique=True)
    op.create_table('Detail',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('seller_company_id', sa.Integer(), nullable=False),
    sa.Column('client_company_id', sa.Integer(), nullable=False),
    sa.Column('material_id', sa.Integer(), nullable=False),
    sa.Column('construction_id', sa.Integer(), nullable=True),
    sa.Column('object_id', sa.Integer(), nullable=True),
    sa.Column('cone_draft_default', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['client_company_id'], ['Company.id'], ),
    sa.ForeignKeyConstraint(['construction_id'], ['Construction.id'], ),
    sa.ForeignKeyConstraint(['material_id'], ['Material.id'], ),
    sa.ForeignKeyConstraint(['object_id'], ['Object.id'], ),
    sa.ForeignKeyConstraint(['seller_company_id'], ['Company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('MaterialObject',
    sa.Column('material_id', sa.Integer(), nullable=False),
    sa.Column('object_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['material_id'], ['Material.id'], ),
    sa.ForeignKeyConstraint(['object_id'], ['Object.id'], ),
    sa.PrimaryKeyConstraint('material_id', 'object_id')
    )
    op.create_table('Request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('interval', sa.Integer(), nullable=False),
    sa.Column('realized_cubature', sa.Float(), nullable=False),
    sa.Column('loading_cubature', sa.Float(), nullable=False),
    sa.Column('purpose_cubature', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('finished_at', sa.DateTime(), nullable=True),
    sa.Column('purpose_start', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('detail_id', sa.Integer(), nullable=False),
    sa.Column('receive_method_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['User.id'], ),
    sa.ForeignKeyConstraint(['detail_id'], ['Detail.id'], ),
    sa.ForeignKeyConstraint(['receive_method_id'], ['ReceiveMethod.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('detail_id')
    )
    op.create_table('Weighing',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tare_weight', sa.Integer(), nullable=True),
    sa.Column('brutto_weight', sa.Integer(), nullable=True),
    sa.Column('netto_weight', sa.Integer(), nullable=True),
    sa.Column('first_at', sa.DateTime(), nullable=False),
    sa.Column('second_at', sa.DateTime(), nullable=False),
    sa.Column('first_operator_id', sa.Integer(), nullable=False),
    sa.Column('second_operator_id', sa.Integer(), nullable=True),
    sa.Column('transport_id', sa.Integer(), nullable=False),
    sa.Column('detail_id', sa.Integer(), nullable=False),
    sa.Column('photo_path', sa.String(), nullable=False),
    sa.Column('clean_weight', sa.Integer(), nullable=True),
    sa.Column('weediness', sa.Integer(), nullable=True),
    sa.Column('silo_number', sa.Integer(), nullable=True),
    sa.Column('doc_weight', sa.Integer(), nullable=True),
    sa.Column('cubature', sa.Float(), nullable=True),
    sa.Column('concrete_mixing_plant_id', sa.Integer(), nullable=True),
    sa.Column('cone_draft', sa.Integer(), nullable=True),
    sa.Column('construction_id', sa.Integer(), nullable=True),
    sa.Column('plomba', sa.String(), nullable=True),
    sa.Column('is_depend', sa.Boolean(), nullable=False),
    sa.Column('is_finished', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['concrete_mixing_plant_id'], ['ConcreteMixingPlant.id'], ),
    sa.ForeignKeyConstraint(['construction_id'], ['Construction.id'], ),
    sa.ForeignKeyConstraint(['detail_id'], ['Detail.id'], ),
    sa.ForeignKeyConstraint(['first_operator_id'], ['User.id'], ),
    sa.ForeignKeyConstraint(['second_operator_id'], ['User.id'], ),
    sa.ForeignKeyConstraint(['transport_id'], ['Transport.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Weighing')
    op.drop_table('Request')
    op.drop_table('MaterialObject')
    op.drop_table('Detail')
    op.drop_index(op.f('ix_User_login'), table_name='User')
    op.drop_index(op.f('ix_User_id'), table_name='User')
    op.drop_table('User')
    op.drop_table('Transport')
    op.drop_table('RolePermission')
    op.drop_table('Object')
    op.drop_table('Role')
    op.drop_table('ReceiveMethod')
    op.drop_table('Permission')
    op.drop_table('Material')
    op.drop_table('Construction')
    op.drop_table('ConcreteMixingPlant')
    op.drop_table('Company')
    op.drop_table('Carrier')
    sa.Enum('TOO', 'IP', 'PP', name='companytypeenum').drop(op.get_bind())
    sa.Enum('supplier', 'customer', 'all', name='companyfuncenum').drop(op.get_bind())
    sa.Enum('horizontal', 'vertical', name='constructiontypeenum').drop(op.get_bind())
    sa.Enum('concrete', 'mortar', 'claydite_concrete', 'sand_concrete', 'high_quality_concrete', 'reinforced_concrete', 'other', name='materialtypeenum').drop(op.get_bind())
    # ### end Alembic commands ###
