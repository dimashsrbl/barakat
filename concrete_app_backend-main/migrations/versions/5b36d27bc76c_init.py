"""init

Revision ID: 5b36d27bc76c
Revises: 
Create Date: 2025-06-25 03:15:26.385162

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import enum

# revision identifiers, used by Alembic.
revision: str = '5b36d27bc76c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


class InertRequestStatusEnum(str, enum.Enum):
    active = 'active'
    finished = 'finished'


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('initial', 'read', 'not_read', name='notificationstatusenum').create(op.get_bind())
    sa.Enum('supplier', 'customer', 'all', 'our', name='companyfuncenum').create(op.get_bind())
    sa.Enum('TOO', 'IP', 'PP', 'AO', 'Filial', name='companytypeenum').create(op.get_bind())
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('login', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('fullname', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_index(op.f('ix_user_login'), 'user', ['login'], unique=True)
    op.create_table('carrier',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_by', sa.Integer(), sa.ForeignKey('user.id'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('company',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('company_type', postgresql.ENUM('TOO', 'IP', 'PP', 'AO', 'Filial', name='companytypeenum', create_type=False), nullable=False),
    sa.Column('company_func', postgresql.ENUM('supplier', 'customer', 'all', 'our', name='companyfuncenum', create_type=False), nullable=False),
    sa.Column('contact_number', sa.String(), nullable=True),
    sa.Column('bin', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_debtor', sa.Boolean(), nullable=False),
    sa.Column('debtor_note', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('concrete_mixing_plant',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('ip_address', sa.String(), nullable=False),
    sa.Column('token', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('construction_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('key_name', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('driver',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('material_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_for_dependent', sa.Boolean(), nullable=False),
    sa.Column('is_for_independent', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('photo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(), nullable=False),
    sa.Column('is_attached', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('filename')
    )
    op.create_table('receive_method_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('key_name', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('construction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('construction_type_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['construction_type_id'], ['construction_type.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('material',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('density', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('material_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['material_type_id'], ['material_type.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('object',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('contact_number', sa.String(), nullable=True),
    sa.Column('chat_id', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('receive_method',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('receive_method_type_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['receive_method_type_id'], ['receive_method_type.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('role_permission',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('role_id', 'permission_id')
    )
    op.create_table('transport',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('plate_number', sa.String(), nullable=False),
    sa.Column('admissible_error', sa.Integer(), nullable=True),
    sa.Column('tare', sa.Integer(), nullable=True),
    sa.Column('carrier_id', sa.Integer(), nullable=True),
    sa.Column('driver_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_by', sa.Integer(), sa.ForeignKey('user.id'), nullable=False),
    sa.ForeignKeyConstraint(['carrier_id'], ['carrier.id'], ),
    sa.ForeignKeyConstraint(['driver_id'], ['driver.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('plate_number')
    )
    op.create_table('detail',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('seller_company_id', sa.Integer(), nullable=False),
    sa.Column('client_company_id', sa.Integer(), nullable=False),
    sa.Column('material_id', sa.Integer(), nullable=False),
    sa.Column('construction_id', sa.Integer(), nullable=True),
    sa.Column('object_id', sa.Integer(), nullable=True),
    sa.Column('cone_draft_default', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['client_company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['construction_id'], ['construction.id'], ),
    sa.ForeignKeyConstraint(['material_id'], ['material.id'], ),
    sa.ForeignKeyConstraint(['object_id'], ['object.id'], ),
    sa.ForeignKeyConstraint(['seller_company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('material_type_object',
    sa.Column('material_type_id', sa.Integer(), nullable=False),
    sa.Column('object_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['material_type_id'], ['material_type.id'], ),
    sa.ForeignKeyConstraint(['object_id'], ['object.id'], ),
    sa.PrimaryKeyConstraint('material_type_id', 'object_id')
    )
    op.create_table('request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('interval', sa.Integer(), nullable=False),
    sa.Column('realized_cubature', sa.Float(), nullable=False),
    sa.Column('loading_cubature', sa.Float(), nullable=False),
    sa.Column('purpose_cubature', sa.Float(), nullable=False),
    sa.Column('initial_purpose_cubature', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('finished_at', sa.DateTime(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('purpose_start', sa.DateTime(), nullable=False),
    sa.Column('is_finished', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_abs', postgresql.ENUM('initial', 'read', 'not_read', name='notificationstatusenum', create_type=False), nullable=False),
    sa.Column('is_call', postgresql.ENUM('initial', 'read', 'not_read', name='notificationstatusenum', create_type=False), nullable=False),
    sa.Column('by_call', sa.Boolean(), nullable=False),
    sa.Column('auto_send_telegram', sa.Boolean(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('detail_id', sa.Integer(), nullable=False),
    sa.Column('receive_method_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['detail_id'], ['detail.id'], ),
    sa.ForeignKeyConstraint(['receive_method_id'], ['receive_method.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('detail_id')
    )
    op.create_table(
        'inert_material_request',
        sa.Column('id', sa.Integer, primary_key=True),
        sa.Column('transport_id', sa.Integer, sa.ForeignKey('transport.id')),
        sa.Column('carrier_id', sa.Integer, sa.ForeignKey('carrier.id')),
        sa.Column('material_id', sa.Integer, sa.ForeignKey('material.id')),
        sa.Column('created_by', sa.Integer, sa.ForeignKey('user.id')),
        sa.Column('status', sa.Enum('active', 'finished', name='inertrequeststatusenum'), nullable=False, server_default='active'),
        sa.Column('created_at', sa.DateTime, nullable=False),
        sa.Column('updated_at', sa.DateTime, nullable=True),
    )
    op.create_table('weighing',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tare_weight', sa.Integer(), nullable=True),
    sa.Column('old_tare_weight', sa.Integer(), nullable=True),
    sa.Column('brutto_weight', sa.Integer(), nullable=True),
    sa.Column('old_brutto_weight', sa.Integer(), nullable=True),
    sa.Column('netto_weight', sa.Integer(), nullable=True),
    sa.Column('first_at', sa.DateTime(), nullable=False),
    sa.Column('second_at', sa.DateTime(), nullable=False),
    sa.Column('first_operator_id', sa.Integer(), nullable=False),
    sa.Column('second_operator_id', sa.Integer(), nullable=True),
    sa.Column('transport_id', sa.Integer(), nullable=False),
    sa.Column('driver_id', sa.Integer(), nullable=True),
    sa.Column('detail_id', sa.Integer(), nullable=False),
    sa.Column('photo_id', sa.Integer(), nullable=True),
    sa.Column('clean_weight', sa.Integer(), nullable=True),
    sa.Column('weediness', sa.Integer(), nullable=True),
    sa.Column('silo_number', sa.Integer(), nullable=True),
    sa.Column('doc_weight', sa.Integer(), nullable=True),
    sa.Column('bag_details', sa.String(length=32), nullable=True),
    sa.Column('old_bag_details', sa.String(), nullable=True),
    sa.Column('cubature', sa.Float(), nullable=True),
    sa.Column('concrete_mixing_plant_id', sa.Integer(), nullable=True),
    sa.Column('cone_draft', sa.String(), nullable=True),
    sa.Column('construction_id', sa.Integer(), nullable=True),
    sa.Column('plomba', sa.String(), nullable=True),
    sa.Column('is_depend', sa.Boolean(), nullable=False),
    sa.Column('is_finished', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_return', sa.Boolean(), nullable=False),
    sa.Column('is_adjusted', sa.Boolean(), nullable=False),
    sa.Column('deactivate_note', sa.String(), nullable=True),
    sa.Column('return_note', sa.String(), nullable=True),
    sa.Column('adjust_note', sa.String(), nullable=True),
    sa.Column('inert_request_id', sa.Integer, sa.ForeignKey('inert_material_request.id'), nullable=True),
    sa.ForeignKeyConstraint(['concrete_mixing_plant_id'], ['concrete_mixing_plant.id'], ),
    sa.ForeignKeyConstraint(['construction_id'], ['construction.id'], ),
    sa.ForeignKeyConstraint(['detail_id'], ['detail.id'], ),
    sa.ForeignKeyConstraint(['driver_id'], ['driver.id'], ),
    sa.ForeignKeyConstraint(['first_operator_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['photo_id'], ['photo.id'], ),
    sa.ForeignKeyConstraint(['second_operator_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['transport_id'], ['transport.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('weighing')
    op.drop_table('request')
    op.drop_table('material_type_object')
    op.drop_table('detail')
    op.drop_index(op.f('ix_user_login'), table_name='user')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_table('user')
    op.drop_table('transport')
    op.drop_table('role_permission')
    op.drop_table('receive_method')
    op.drop_table('object')
    op.drop_table('material')
    op.drop_table('construction')
    op.drop_table('role')
    op.drop_table('receive_method_type')
    op.drop_table('photo')
    op.drop_table('permission')
    op.drop_table('material_type')
    op.drop_table('driver')
    op.drop_table('construction_type')
    op.drop_table('concrete_mixing_plant')
    op.drop_table('company')
    op.drop_table('carrier')
    sa.Enum('TOO', 'IP', 'PP', 'AO', 'Filial', name='companytypeenum').drop(op.get_bind())
    sa.Enum('supplier', 'customer', 'all', 'our', name='companyfuncenum').drop(op.get_bind())
    sa.Enum('initial', 'read', 'not_read', name='notificationstatusenum').drop(op.get_bind())
    op.drop_table('inert_material_request')
    # ### end Alembic commands ###
